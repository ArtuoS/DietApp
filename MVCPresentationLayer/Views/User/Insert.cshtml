@model MVCPresentationLayer.Models.InsertModels.UserInsertViewModel

@{
    ViewData["Title"] = "Insert";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <h2>
                        Cadastro
                    </h2>
                    <p>
                        Siga os passos para o cadastro no sistema.
                    </p>

                    <form asp-action="Insert" id="form" class="wizard-big">
                        <h1>Conta</h1>
                        <fieldset>
                            <h2>Informação de perfil</h2>
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="form-group">
                                        <label asp-for="First_Name"></label>
                                        <input asp-for="First_Name" id="userName" name="userName" type="text" class="form-control required">
                                        <span asp-validation-for="First_Name" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Last_Name"></label>
                                        <input asp-for="Last_Name" id="userLastName" name="userLastName" type="text" class="form-control required">
                                        <span asp-validation-for="Last_Name" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Email"></label>
                                        <input asp-for="Email" type="email" id="email" name="email" class="form-control required">
                                        <span asp-validation-for="Email" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Password"></label>
                                        <input asp-for="Password" type="password" id="password" name="password" class="form-control required">
                                        <span asp-validation-for="Password" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label>Confirmar senha</label>
                                        <input id="confirm" name="confirm" type="password" class="form-control required">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <h1 class="logo-name">  D+</h1>
                                </div>
                            </div>

                        </fieldset>
                        <h1>Dados</h1>
                        <fieldset>
                            <h2>Dados pessoais</h2>
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="form-group" id="data_3">
                                        <label asp-for="Date_Of_Birthday" class="font-normal"></label>
                                        <div class="input-group date">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span><input asp-for="Date_Of_Birthday" type="text" class="form-control" value="">
                                            <span asp-validation-for="Date_Of_Birthday" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Heigth"></label>
                                        <input asp-for="Heigth" class="touchspin2" type="text" value="" name="demo2">
                                        <span asp-validation-for="Heigth" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Weigth"></label>
                                        <input asp-for="Weigth" class="touchspin2" type="text" value="" name="demo2">
                                        <span asp-validation-for="Weigth" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label></label>
                                        <div class="radio radio-danger">
                                            <input type="radio" name="radio2" id="radio3" value="0">
                                            <label for="radio3">
                                                Feminino
                                            </label>
                                        </div>
                                        <div class="radio radio-danger">
                                            <input type="radio" name="radio2" id="radio4" value="1" checked="">
                                            <label for="radio4">
                                                Masculino
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>

                        <h1>Preferencias</h1>
                        <fieldset>
                        </fieldset>

                        <h1>Restrições</h1>
                        <fieldset>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
        <link rel="stylesheet" href="~/lib/daterangepicker/daterangepicker-bs3.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker3.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/steps/jquery.steps.min.js"></script>
        <script src="~/lib/validate/jquery.validate.min.js"></script>
        <script src="~/lib/daterangepicker/daterangepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.js"></script>
        <script src="~/lib/cropper/dist/cropper.js"></script>
        <script src="~/lib/select2/dist/js/select2.js"></script>
        <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>
        <script src="~/lib/dualListbox/jquery.bootstrap-duallistbox.js"></script>
        <script src="~/lib/daterangepicker/daterangepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
        <script src="~/lib/cropper/dist/cropper.min.js"></script>
        <script src="~/lib/select2/dist/js/select2.min.js"></script>
    </environment>


    <script type="text/javascript">
        $(document).ready(function () {

            $("#wizard").steps();
            $("#form").steps({
                bodyTag: "fieldset",
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Always allow going backward even if the current step contains invalid fields!
                    if (currentIndex > newIndex) {
                        return true;
                    }

                    // Forbid suppressing "Warning" step if the user is to young
                    if (newIndex === 3 && Number($("#age").val()) < 18) {
                        return false;
                    }

                    var form = $(this);

                    // Clean up if user went backward before
                    if (currentIndex < newIndex) {
                        // To remove error styles
                        $(".body:eq(" + newIndex + ") label.error", form).remove();
                        $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                    }

                    // Disable validation on fields that are disabled or hidden.
                    form.validate().settings.ignore = ":disabled,:hidden";

                    // Start validation; Prevent going forward if false
                    return form.valid();
                },
                onStepChanged: function (event, currentIndex, priorIndex) {
                    // Suppress (skip) "Warning" step if the user is old enough.
                    if (currentIndex === 2 && Number($("#age").val()) >= 18) {
                        $(this).steps("next");
                    }

                    // Suppress (skip) "Warning" step if the user is old enough and wants to the previous step.
                    if (currentIndex === 2 && priorIndex === 3) {
                        $(this).steps("previous");
                    }
                },
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('.tagsinput').tagsinput({
                tagClass: 'label label-primary'
            });

            $('.dual_select').bootstrapDualListbox({
                selectorMinimalHeight: 160
            });

            $('#data_3 .input-group.date').datepicker({
                startView: 2,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            $('input[name="daterange"]').daterangepicker();

            $('#reportrange span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

            $('#reportrange').daterangepicker({
                format: 'MM/DD/YYYY',
                startDate: moment().subtract(29, 'days'),
                endDate: moment(),
                minDate: '01/01/2012',
                maxDate: '12/31/2015',
                dateLimit: { days: 60 },
                showDropdowns: true,
                showWeekNumbers: true,
                timePicker: false,
                timePickerIncrement: 1,
                timePicker12Hour: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                opens: 'right',
                drops: 'down',
                buttonClasses: ['btn', 'btn-sm'],
                applyClass: 'btn-primary',
                cancelClass: 'btn-default',
                separator: ' to ',
                locale: {
                    applyLabel: 'Submit',
                    cancelLabel: 'Cancel',
                    fromLabel: 'From',
                    toLabel: 'To',
                    customRangeLabel: 'Custom',
                    daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    firstDay: 1
                }
            }, function (start, end, label) {
                console.log(start.toISOString(), end.toISOString(), label);
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            });


            $(".select2_demo_1").select2();
            $(".select2_demo_2").select2();
            $(".select2_demo_3").select2({
                placeholder: "Select a state",
                allowClear: true
            });

        });



    </script>
}